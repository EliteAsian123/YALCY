name: Build All Platforms

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Publish
        run: dotnet publish -c Release -r win-x64 --self-contained=true --output ./publish

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-publish
          path: ./publish

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Publish
        run: dotnet publish -c Release -r linux-x64 --self-contained=true --output ./publish

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-publish
          path: ./publish

  build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Publish
        run: dotnet publish -c Release -r osx-x64 --self-contained=true --output ./publish

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-publish
          path: ./publish

  create-release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false
          body: |
            Release notes can go here.

      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-publish
          path: ./windows

      - name: Upload Windows Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows
          asset_name: windows.zip
          asset_content_type: application/zip

      - name: Download Linux Artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-publish
          path: ./linux

      - name: Upload Linux Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux
          asset_name: linux.zip
          asset_content_type: application/zip

      - name: Download macOS Artifact
        uses: actions/download-artifact@v3
        with:
          name: macos-publish
          path: ./macos

      - name: Upload macOS Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos
          asset_name: macos.zip
          asset_content_type: application/zip
